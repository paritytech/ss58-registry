stages:
  - lint
  - test
  - build
  - publish

variables:                         &default-vars
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       100
  CARGO_INCREMENTAL:               0
  CARGO_TARGET_DIR:                "/ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"
  CI_IMAGE:                        "paritytech/ci-linux:production"
  CARGO_UNLEASH_INSTALL_PARAMS:    "--version 1.0.0-alpha.12"
  CARGO_UNLEASH_PKG_DEF:           ""
  VAULT_SERVER_URL:                "https://vault.parity-mgmt-vault.parity.io"
  VAULT_AUTH_PATH:                 "gitlab-parity-io-jwt"
  VAULT_AUTH_ROLE:                 "cicd_gitlab_parity_${CI_PROJECT_NAME}"

#### Vault secrets
.vault-secrets:                    &vault-secrets
  secrets:
    CRATES_TOKEN:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/CRATES_TOKEN@kv
      file:                        false

.build-refs:                     &build-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1


.rust-info-script:                 &rust-info-script
  - rustup show
  - cargo --version
  - rustup +nightly show
  - cargo +nightly --version
  - bash --version
  - sccache -s

.kubernetes-env:                   &kubernetes-env
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  interruptible:                   true
  tags:
    - kubernetes-parity-build

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     28 days
    paths:
      - ./artifacts/

#### stage:                        lint

fmt:
  stage:                           lint
  image:                           "${CI_IMAGE}"
  <<:                              *kubernetes-env
  script:
    - cargo +nightly fmt --all -- --check

clippy:
  stage:                           lint
  <<:                              *kubernetes-env
  script:
    - cargo +nightly clippy --all-targets --verbose

#### stage:                       test

deny:
  stage:                           test
  <<:                              *kubernetes-env
  <<:                              *collect-artifacts
  script:
    - cargo deny check --hide-inclusion-graph -c .maintain/deny.toml
  after_script:
    - mkdir -p ./artifacts
    - echo "___Complete logs can be found in the artifacts___"
    - cargo deny check --hide-inclusion-graph 2> cargo_deny.log

test:
  stage:                           test
  <<:                              *kubernetes-env
  script:
    - cargo test --all  --verbose

check:
  stage:                           test
  <<:                              *kubernetes-env
  script:
    - cargo check --all  --verbose

#### stage:                       build

build:
  stage:                           build
  <<:                              *build-refs
  <<:                              *kubernetes-env
  script:
    - cargo build --no-default-features --target wasm32-unknown-unknown --verbose

#### stage:                       publish

unleash-to-crates-io:
  stage:                           publish
  <<:                              *kubernetes-env
  <<:                              *vault-secrets
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^ci-release-.*$/
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1
  script:
    - cargo install cargo-unleash ${CARGO_UNLEASH_INSTALL_PARAMS}
    - cargo unleash em-dragons --no-check --owner github:paritytech:core-devs ${CARGO_UNLEASH_PKG_DEF}

